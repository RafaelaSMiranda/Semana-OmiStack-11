{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sansumg\\\\Desktop\\\\OmniStack\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport Header from './Header'; // JSX (javascript e xml)\n\nfunction App() {\n  const [counter, setCounter] = useState(0); // define que, mesmo que iniciar novo estado, o valor da variável não sera alterado\n  // counter: valor real da variável\n  // setCounter, função de atualização\n\n  function increment() {\n    setCounter(counter + 1);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Contador: \", counter), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: increment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Incrementar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Sansumg/Desktop/OmniStack/frontend/src/App.js"],"names":["React","useState","Header","App","counter","setCounter","increment"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CAAD,CAAtC,CAFa,CAGb;AACA;AACA;;AAEA,WAASK,SAAT,GAAoB;AAElBD,IAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACD;;AAED,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaA,OADb,CAFF,eAKE;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CAFF;AAUD;;AAED,eAAeH,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport Header from './Header';\n\n// JSX (javascript e xml)\n\nfunction App() {\n\n  const [counter, setCounter] = useState(0);\n  // define que, mesmo que iniciar novo estado, o valor da variável não sera alterado\n  // counter: valor real da variável\n  // setCounter, função de atualização\n\n  function increment(){\n\n    setCounter(counter+1);\n  }\n\n  return (\n    \n    <div>\n\n      <header>\n        Contador: {counter}\n      </header>\n      <button onClick={increment}>Incrementar</button>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}